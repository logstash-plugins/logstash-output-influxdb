:plugin: influxdb
:type: output

///////////////////////////////////////////
START - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////
:version: %VERSION%
:release_date: %RELEASE_DATE%
:changelog_url: %CHANGELOG_URL%
:include_path: ../../../../logstash/docs/include
///////////////////////////////////////////
END - GENERATED VARIABLES, DO NOT EDIT!
///////////////////////////////////////////

[id="plugins-{type}s-{plugin}"]

=== Influxdb output plugin

include::{include_path}/plugin_header.asciidoc[]

==== Description

This output lets you output Metrics to InfluxDB (>= 0.9.0-rc31)

The configuration here attempts to be as friendly as possible
and minimize the need for multiple definitions to write to
multiple measurements and still be efficient

the InfluxDB API let's you do some semblance of bulk operation
per http call but each call is database-specific

You can learn more at http://influxdb.com[InfluxDB homepage]

[id="plugins-{type}s-{plugin}-options"]
==== Influxdb Output Configuration Options

This plugin supports the following configuration options plus the <<plugins-{type}s-{plugin}-common-options>> described later.

[cols="<,<,<",options="header",]
|=======================================================================
|Setting |Input type|Required
| <<plugins-{type}s-{plugin}-allow_time_override>> |<<boolean,boolean>>|No
| <<plugins-{type}s-{plugin}-coerce_values>> |<<hash,hash>>|No
| <<plugins-{type}s-{plugin}-data_points>> |<<hash,hash>>|Yes
| <<plugins-{type}s-{plugin}-db>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-exclude_fields>> |<<array,array>>|No
| <<plugins-{type}s-{plugin}-flush_size>> |<<number,number>>|No
| <<plugins-{type}s-{plugin}-host>> |<<string,string>>|Yes
| <<plugins-{type}s-{plugin}-idle_flush_time>> |<<number,number>>|No
| <<plugins-{type}s-{plugin}-initial_delay>> |<<number,number>>|No
| <<plugins-{type}s-{plugin}-max_retries>> |<<number,number>>|No
| <<plugins-{type}s-{plugin}-measurement>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-password>> |<<password,password>>|No
| <<plugins-{type}s-{plugin}-port>> |<<number,number>>|No
| <<plugins-{type}s-{plugin}-retention_policy>> |<<string,string>>|No
| <<plugins-{type}s-{plugin}-send_as_tags>> |<<array,array>>|No
| <<plugins-{type}s-{plugin}-ssl>> |<<boolean,boolean>>|No
| <<plugins-{type}s-{plugin}-time_precision>> |<<string,string>>, one of `["n", "u", "ms", "s", "m", "h"]`|No
| <<plugins-{type}s-{plugin}-use_event_fields_for_data_points>> |<<boolean,boolean>>|No
| <<plugins-{type}s-{plugin}-user>> |<<string,string>>|No
|=======================================================================

Also see <<plugins-{type}s-{plugin}-common-options>> for a list of options supported by all
output plugins.

&nbsp;

[id="plugins-{type}s-{plugin}-allow_time_override"]
===== `allow_time_override` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Allow the override of the `time` column in the event?

By default any column with a name of `time` will be ignored and the time will
be determined by the value of `@timestamp`.

Setting this to `true` allows you to explicitly set the `time` column yourself

Note: **`time` must be an epoch value in either seconds, milliseconds or microseconds**

[id="plugins-{type}s-{plugin}-coerce_values"]
===== `coerce_values` 

  * Value type is <<hash,hash>>
  * Default value is `{}`

Allow value coercion

this will attempt to convert data point values to the appropriate type before posting
otherwise sprintf-filtered numeric values could get sent as strings
format is `{'column_name' => 'datatype'}`

currently supported datatypes are `integer` and `float`


[id="plugins-{type}s-{plugin}-data_points"]
===== `data_points` 

  * This is a required setting.
  * Value type is <<hash,hash>>
  * Default value is `{}`

Hash of key/value pairs representing data points to send to the named database
Example: `{'column1' => 'value1', 'column2' => 'value2'}`

Events for the same measurement will be batched together where possible
Both keys and values support sprintf formatting

[id="plugins-{type}s-{plugin}-db"]
===== `db` 

  * Value type is <<string,string>>
  * Default value is `"statistics"`

The database to write - supports sprintf formatting

[id="plugins-{type}s-{plugin}-exclude_fields"]
===== `exclude_fields` 

  * Value type is <<array,array>>
  * Default value is `["@timestamp", "@version", "sequence", "message", "type"]`

An array containing the names of fields from the event to exclude from the
data points 

Events, in general, contain keys "@version" and "@timestamp". Other plugins
may add others that you'll want to exclude (such as "command" from the 
exec plugin).

This only applies when use_event_fields_for_data_points is true.

[id="plugins-{type}s-{plugin}-flush_size"]
===== `flush_size` 

  * Value type is <<number,number>>
  * Default value is `100`

This setting controls how many events will be buffered before sending a batch
of events. Note that these are only batched for the same measurement

[id="plugins-{type}s-{plugin}-host"]
===== `host` 

  * This is a required setting.
  * Value type is <<string,string>>
  * There is no default value for this setting.

The hostname or IP address to reach your InfluxDB instance

[id="plugins-{type}s-{plugin}-idle_flush_time"]
===== `idle_flush_time` 

  * Value type is <<number,number>>
  * Default value is `1`

The amount of time since last flush before a flush is forced.

This setting helps ensure slow event rates don't get stuck in Logstash.
For example, if your `flush_size` is 100, and you have received 10 events,
and it has been more than `idle_flush_time` seconds since the last flush,
logstash will flush those 10 events automatically.

This helps keep both fast and slow log streams moving along in
near-real-time.

[id="plugins-{type}s-{plugin}-initial_delay"]
===== `initial_delay` 

  * Value type is <<number,number>>
  * Default value is `1`

The amount of time in seconds to delay the initial retry on connection failure.  

The delay will increase exponentially for each retry attempt (up to max_retries).

[id="plugins-{type}s-{plugin}-max_retries"]
===== `max_retries` 

  * Value type is <<number,number>>
  * Default value is `3`

The number of time to retry recoverable errors before dropping the events.

A value of -1 will cause the plugin to retry indefinately.
A value of 0 will cause the plugin to never retry.
Otherwise it will retry up to the specified mumber of times.


[id="plugins-{type}s-{plugin}-measurement"]
===== `measurement` 

  * Value type is <<string,string>>
  * Default value is `"logstash"`

Measurement name - supports sprintf formatting

[id="plugins-{type}s-{plugin}-password"]
===== `password` 

  * Value type is <<password,password>>
  * Default value is `nil`

The password for the user who access to the named database

[id="plugins-{type}s-{plugin}-port"]
===== `port` 

  * Value type is <<number,number>>
  * Default value is `8086`

The port for InfluxDB

[id="plugins-{type}s-{plugin}-retention_policy"]
===== `retention_policy` 

  * Value type is <<string,string>>
  * Default value is `"autogen"`

The retention policy to use

[id="plugins-{type}s-{plugin}-send_as_tags"]
===== `send_as_tags` 

  * Value type is <<array,array>>
  * Default value is `["host"]`

An array containing the names of fields to send to Influxdb as tags instead 
of fields. Influxdb 0.9 convention is that values that do not change every
request should be considered metadata and given as tags.

[id="plugins-{type}s-{plugin}-ssl"]
===== `ssl` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Enable SSL/TLS secured communication to InfluxDB

[id="plugins-{type}s-{plugin}-time_precision"]
===== `time_precision` 

  * Value can be any of: `n`, `u`, `ms`, `s`, `m`, `h`
  * Default value is `"ms"`

Set the level of precision of `time`

only useful when overriding the time value

[id="plugins-{type}s-{plugin}-use_event_fields_for_data_points"]
===== `use_event_fields_for_data_points` 

  * Value type is <<boolean,boolean>>
  * Default value is `false`

Automatically use fields from the event as the data points sent to Influxdb

[id="plugins-{type}s-{plugin}-user"]
===== `user` 

  * Value type is <<string,string>>
  * Default value is `nil`

The user who has access to the named database



[id="plugins-{type}s-{plugin}-common-options"]
include::{include_path}/{type}.asciidoc[]